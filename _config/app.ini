memory_limit = 128M
post_max_size = 100M
upload_max_filesize = 200M

[mail function]
sendmail_path = "/usr/sbin/ssmtp -t"

[Xdebug]
;remember to change this to your local ip address
;The final step where docker is concerned was to create a new network alias.
;It seems that there is a problem with docker that stops docker networks talking to the host machine properly.
;The docker containers can talk to each other but because of subnet or other network layer communication back to
;the host machine does not always work.
;To resolve this we run: sudo ifconfig lo0 alias 10.254.254.254
;This creates the alias for us and will allow docker to work in both directions
;meaning that Xdebug and PHPStorm can talk to each other.
;source - http://jamescowie.me/blog/2016/12/all-hail-xdebug-and-lets-let-var-dump-die/

;Now for how to configure PHPStorm.
;Now the easy part and if you have had Xdebug and PHPStorm working in the past this is just the same.
;To start with open up Tools -> DBGProxy and select configure. We need to enter in our: IDEKey, Host and Port number:
;IDE Key: PHPSTORM
;Host: 10.254.254.254
;Port: 9000

;Next up we want to configure the "Server" and we do this via Preferences -> Language & Frameworks -> PHP -> Servers.
;This time we enter a Name, Host, Port debugger and set up the map so that
;in my case app maps to /var/www/html inside of the docker container:
;Name: qwerty
;Host: 127.0.0.1
;Port: the port you've set your docker container to run on ie. 8080

;last step is to go to Run -> Edit Configurations and create a debug configuration for your site.
; debug away!

xdebug.remote_host=10.254.254.254
xdebug.remote_autostart=1
xdebug.idekey = PHPSTORM
xdebug.remote_enable = on
xdebug.remote_connect_back = 0
xdebug.profiler_enable = 0